variables:
    NAME: "fedora"

fedora:
    stage: build
    image: "$CI_REGISTRY_IMAGE/$NAME"
    script:
        - meson build --werror
        - ninja -C build

gnome-build-meta:
    stage: build
    image: "$CI_REGISTRY_IMAGE/$NAME"
    script:
        - bst --directory /gnome-build-meta workspace open --no-checkout sdk/gvfs.bst .
        # The following is used instead "bst build" to prevent fetching updated dependencies.
        - bst --directory /gnome-build-meta shell --build sdk/gvfs.bst -- sh -c "meson build -Dsystemduserunitdir=no -Dtmpfilesdir=no -Dinstalled_tests=true -Ddbus_service_dir=/usr/share/dbus-1/services -Dadmin=false -Dafc=false -Dafp=false -Darchive=false -Dcdda=false -Ddnssd=false -Dgoa=false -Dgoogle=false -Dgphoto2=false -Dhttp=false -Dmtp=false -Dnfs=false -Dsftp=false -Dsmb=false -Dudisks2=false -Dbluray=false -Dfuse=false -Dgcr=false -Dgcrypt=false -Dgudev=false -Dkeyring=false -Dlogind=false -Dlibusb=false && ninja -C build"

update-image:
    stage: build
    image: docker:latest
    services:
        - docker:dind
    script:
        - docker build --tag "$CI_REGISTRY_IMAGE/$NAME" .gitlab-ci/
        # The following can't be run from Dockerfile as it needs --privileged.
        - docker run --privileged --name "$NAME" "$CI_REGISTRY_IMAGE/$NAME" sh -c "bst --directory /gnome-build-meta build --track-all sdk/gvfs.bst"
        - docker commit "$NAME" "$CI_REGISTRY_IMAGE/$NAME"
        - docker tag "$CI_REGISTRY_IMAGE/$NAME" "$CI_REGISTRY_IMAGE/$NAME:v$CI_JOB_ID"
        - docker login "$CI_REGISTRY" -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
        - docker push "$CI_REGISTRY_IMAGE/$NAME"
    when: manual
